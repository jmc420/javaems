/************************************************************/
/*
	File: JPAGenerator.java

	Template for JPA Mapping file.

	Author: James Cowan
*/
/************************************************************/

package org.jems.orm;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.PrintStream;

import org.jems.generator.ClassMetaData;
import org.jems.generator.GeneratorException;
import org.jems.orm.model.OrmEntity;

/************************************************************/

public class JPAGenerator extends ORMGenerator
{
	public JPAGenerator(File schemaDirectory, File schemaFile, File output) throws GeneratorException
	{
		super(schemaDirectory, schemaFile, output);
	}

	/************************************************************/
	/** generate */

	public void generate(PrintStream out) throws IOException, GeneratorException
	{
		if (!m_schemaFile.exists())
		{
		String msg = m_schemaFile.getAbsolutePath()+" is missing";
		
			throw new GeneratorException(msg);		
		}
		
		if (!m_output.exists())
		{
		String msg = m_output.getAbsolutePath()+" is missing";
		
			throw new GeneratorException(msg);
		}
			
		m_log.info("Generate: "+m_output.getAbsolutePath());
				
		generateMapping(System.out);

	} // generate
	
	/************************************************************/
	/* protected methods */
	/************************************************************/
	/** generate */

	protected void generateMapping(PrintStream out) throws IOException, GeneratorException
	{
	OrmEntity ormEntities[] = m_orm.getOrmEntity();
		
		for (int count=0; count<ormEntities.length; count++)
		{
		OrmEntity ormEntity = ormEntities[count];
		
			try
			{
			ClassMetaData md = new ClassMetaData(ormEntity.getClassName(), "");
			JPAClassMapping classMapping = new JPAClassMapping(md, m_orm, ormEntity);
			String fileName = ormEntity.getTableName()+".java";
			File file = new File(m_output, fileName);
			FileOutputStream fos = new FileOutputStream(file);
			PrintStream ps = new PrintStream(fos);
			
				classMapping.generate(ps);
			}
			catch (GeneratorException e)
			{
				throw e;
			}
			catch (Exception ex)
			{
				throw new GeneratorException(ex.toString());
			}
		}

	} // generateMapping
	
} // JPAGenerator

/************************************************************/


