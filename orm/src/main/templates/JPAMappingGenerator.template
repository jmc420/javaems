/************************************************************/
/*
	File: JPAMappingGenerator.java

	Template for JPA Mapping file.

	Author: James Cowan
*/
/************************************************************/

package org.jems.orm;

import java.io.File;
import java.io.IOException;
import java.io.PrintStream;

import org.jems.generator.ClassMetaData;
import org.jems.generator.GeneratorException;
import org.jems.orm.model.OrmEntity;

/************************************************************/

public class JPAMappingGenerator extends ORMGenerator
{
	public JPAMappingGenerator(File schemaDirectory, File schemaFile, File output) throws GeneratorException
	{
		super(schemaDirectory, schemaFile, output);
	}

	/************************************************************/
	/* protected methods */
	/************************************************************/
	/** generate */

	protected void generateMapping(PrintStream out) throws IOException, GeneratorException
	{
<template><?xml version=\"1.0\" encoding=\"UTF-8\"?>
<entity-mappings xmlns=\"http://java.sun.com/xml/ns/persistence/orm\"
                 xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"
                 xsi:schemaLocation=\"http://java.sun.com/xml/ns/persistence/orm 
                 					 http://java.sun.com/xml/ns/persistence/orm_2_0.xsd\"
                 version=\"1.0\">
                 
 <!-- **************************************************************** -->
 <!--  persistent unit meta data -->
 
 <persistence-unit-metadata>
  <xml-mapping-metadata-complete/>
  <persistence-unit-defaults>
   <schema><%out.print(m_orm.getDatabase());%></schema>
   <access>PROPERTY</access>
  </persistence-unit-defaults>
 </persistence-unit-metadata>
 
<%
		OrmEntity ormEntities[] = m_orm.getOrmEntity();
		
		for (int count=0; count<ormEntities.length; count++)
		{
		OrmEntity ormEntity = ormEntities[count];
		
			try
			{
			ClassMetaData md = new ClassMetaData(ormEntity.getClassName(), "");
			JPAClassMapping classMapping = new JPAClassMapping(md, m_orm, ormEntity);
		
				classMapping.generate(out);
			}
			catch (GeneratorException e)
			{
				throw e;
			}
			catch (Exception ex)
			{
				throw new GeneratorException(ex.toString());
			}
		}
%> </entity-mappings>
</template>

	} // generateMapping
	
	/************************************************************/
	/* protected methods */
	/************************************************************/

	
} // JPAMappingGenerator

/************************************************************/


